[gd_scene load_steps=34 format=3 uid="uid://ba3rp37rboedv"]

[ext_resource type="Script" uid="uid://crwod2g12spg6" path="res://assets/effects/destroy_in_seconds.gd" id="1_u7ax0"]
[ext_resource type="Texture2D" uid="uid://08841tb5t151" path="res://assets/textures/fx/T_circle42.PNG" id="2_o5b4i"]
[ext_resource type="Texture2D" uid="uid://dlfoskyb4rbmj" path="res://assets/textures/fx/T_groundmark_color.png" id="3_u7ax0"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_s0ixc"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_4whpf"]
parameter_name = "hitTexture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_2tgk8"]
expanded_output_ports = [0]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jkchi"]
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_shoti"]
billboard_type = 3
keep_scale = true

[sub_resource type="VisualShader" id="VisualShader_dcmsx"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform sampler2D hitTexture : source_color;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]), normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		__wm = __wm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(hitTexture, UV);
	float n_out4p1 = n_out4p0.r;


// FloatOp:5
	float n_out5p0 = n_out4p1 * n_out2p4;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out5p0;


}
"
flags/unshaded = true
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_shoti")
nodes/vertex/2/position = Vector2(120, 380)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/0/position = Vector2(480, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_s0ixc")
nodes/fragment/2/position = Vector2(0, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_4whpf")
nodes/fragment/3/position = Vector2(-220, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_2tgk8")
nodes/fragment/4/position = Vector2(60, 360)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_jkchi")
nodes/fragment/5/position = Vector2(260, 300)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 4, 2, 2, 4, 5, 1, 5, 0, 0, 1, 4, 1, 5, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_swv1b"]
render_priority = 0
shader = SubResource("VisualShader_dcmsx")
shader_parameter/hitTexture = ExtResource("2_o5b4i")

[sub_resource type="Curve" id="Curve_atl03"]
_data = [Vector2(0, 0.361868), 0.0, 0.0, 0, 0, Vector2(0.545918, 1), 0.0, 0.0, 0, 0, Vector2(0.97449, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="CurveTexture_52kqj"]
curve = SubResource("Curve_atl03")

[sub_resource type="Curve" id="Curve_qtkrt"]
_limits = [-360.0, 360.0, 0.0, 1.0]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.977612, -20.2247), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_pmu5n"]
curve = SubResource("Curve_qtkrt")

[sub_resource type="Gradient" id="Gradient_7xgyf"]
colors = PackedColorArray(1, 1, 5, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_o8nnf"]
gradient = SubResource("Gradient_7xgyf")
use_hdr = true

[sub_resource type="Curve" id="Curve_ymsll"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.270408, 0.564202), 0.0, 0.0, 0, 0, Vector2(0.494898, 0.22179), 0.0, 0.0, 0, 0, Vector2(0.75, 0.0972763), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 5

[sub_resource type="CurveTexture" id="CurveTexture_8o4qk"]
curve = SubResource("Curve_ymsll")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_on1oa"]
angle_min = 1.07288e-05
angle_max = 10.0
angle_curve = SubResource("CurveTexture_pmu5n")
gravity = Vector3(0, 0, 0)
scale_min = 3.8
scale_max = 4.2
scale_curve = SubResource("CurveTexture_8o4qk")
color_ramp = SubResource("GradientTexture1D_o8nnf")
alpha_curve = SubResource("CurveTexture_52kqj")

[sub_resource type="QuadMesh" id="QuadMesh_oe55r"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_o5b4i"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_cqjvh"]
parameter_name = "hitTexture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_s0ixc"]
expanded_output_ports = [0]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4whpf"]
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_2tgk8"]
billboard_type = 3
keep_scale = true

[sub_resource type="VisualShader" id="VisualShader_jkchi"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform sampler2D hitTexture : source_color;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(hitTexture, UV);
	float n_out4p1 = n_out4p0.r;


// FloatOp:5
	float n_out5p0 = n_out4p1 * n_out2p4;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out5p0;


}
"
flags/unshaded = true
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_2tgk8")
nodes/vertex/2/position = Vector2(120, 380)
nodes/fragment/0/position = Vector2(480, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_o5b4i")
nodes/fragment/2/position = Vector2(0, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_cqjvh")
nodes/fragment/3/position = Vector2(-220, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_s0ixc")
nodes/fragment/4/position = Vector2(60, 360)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_4whpf")
nodes/fragment/5/position = Vector2(260, 300)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 4, 2, 2, 4, 5, 1, 5, 0, 0, 1, 4, 1, 5, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_shoti"]
render_priority = 0
shader = SubResource("VisualShader_jkchi")
shader_parameter/hitTexture = ExtResource("3_u7ax0")

[sub_resource type="Gradient" id="Gradient_dcmsx"]
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_swv1b"]
gradient = SubResource("Gradient_dcmsx")

[sub_resource type="Curve" id="Curve_52kqj"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.710744, 0.011236), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_qtkrt"]
curve = SubResource("Curve_52kqj")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_pmu5n"]
particle_flag_align_y = true
direction = Vector3(0, 2.5, 5)
spread = 138.0
initial_velocity_min = 20.0
initial_velocity_max = 25.0
gravity = Vector3(0, -60, 0)
scale_min = 2.0
scale_max = 2.0
scale_curve = SubResource("CurveTexture_qtkrt")
color = Color(2, 2, 7, 1)
color_ramp = SubResource("GradientTexture1D_swv1b")

[sub_resource type="BoxMesh" id="BoxMesh_fgikb"]
size = Vector3(0.1, 1, 0.1)

[node name="HitBullet" type="Node3D"]
script = ExtResource("1_u7ax0")
secondsToLive = 0.7

[node name="sparkParticle" type="GPUParticles3D" parent="."]
material_override = SubResource("ShaderMaterial_swv1b")
emitting = false
amount = 1
lifetime = 0.65
one_shot = true
explosiveness = 1.0
process_material = SubResource("ParticleProcessMaterial_on1oa")
draw_pass_1 = SubResource("QuadMesh_oe55r")

[node name="meshParticles" type="GPUParticles3D" parent="."]
material_override = SubResource("ShaderMaterial_shoti")
emitting = false
amount = 21
lifetime = 0.5
one_shot = true
explosiveness = 1.0
process_material = SubResource("ParticleProcessMaterial_pmu5n")
draw_pass_1 = SubResource("BoxMesh_fgikb")
